spring:
  mvc:
    favicon:
      enabled: false
  application:
    name: batsoft-job
  cloud:
    config:
      profile: dev
      label:
      uri: http://127.0.0.1:8899/
  # 添加本文件：By LvQS: 20190620
  datasource:
    name: batsoft
    url: jdbc:mysql://localhost:3306/batsoft
    username: root
    password: root
    # 使用druid数据源
    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: com.mysql.jdbc.Driver
    filters: stat
    maxActive: 20
    initialSize: 1
    maxWait: 60000
    minIdle: 1
    timeBetweenEvictionRunsMillis: 60000
    minEvictableIdleTimeMillis: 300000
    validationQuery: select 'x'
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
    poolPreparedStatements: true
    maxOpenPreparedStatements: 20
    read-size: 2 #Added By LvQS: 20190620
  redis: # Added by: LvQS:20190620 TODO:待完善信息
    database: 0
    host: localhost
    port: 6379
    password:
    timeout: 0
    pool:
      max-active: 8
      max-wait: -1
      max-idle: 8
      min-idle: 0

#eureka \u914D\u7F6E
eureka:
  client:
    serviceUrl:
      defaultZone: http://127.0.0.1:6061/eureka/

#log setting
logging:
  config: classpath:logback-spring.xml
  path:   ~/usr/local/bttmall/logs/job
#log setting

## Added by LvQS:20190620
shiro:
  realm:
    jdbc:
      enabled: true
      authentication-query: SELECT password FROM sys_user where user_name = ? #根据用户名获取密码
      salt: no_salt #可选值：no_salt, crypt(源码中未实现), column(上面这个SQL中第二列中获取salt), external(需继承JdbcRealm重写getSaltForUser()方法)
      user-roles-query: SELECT r.code
        FROM sys_user_role ur
        LEFT JOIN sys_role r ON r.id = ur.role_id
        LEFT JOIN sys_user u ON ur.user_id = u.id
        WHERE u.user_name = ? #根据用户名获取角色
      permissions-query: SELECT re.permission
        FROM sys_role_resource rr
        LEFT JOIn sys_resource re ON rr.resource_id = re.id
        LEFT JOIN sys_role r ON rr.role_id = r.id
        WHERE r.code = ? #根据角色获取权限
      permissions-lookup-enabled: true
  login-url: /login.html #登录入口URL
  success-url: /index.html #登录成功跳转URL
  unauthorized-url: /unauthorized.html #当访问未授权页面时跳转至该URL，将为filter chain中的每个AuthorizationFilter设置跳转URL（如果目标没有指定）
  sign-in:
    user-param: username #用户名参数名称
    password-param: password #密码参数名称
    remember-me-param: rememberMe #记住我参数名称
  hash-iterations: 1 #加密迭代次数，强制设为至少1次（即使设置0或负数）
  hash-algorithm-name: MD5 #加密算法名称，如：MD2/SHA-1/SHA-256/SHA-384/SHA-512
  filters:
    my-filter: com.batsoft.shiro.filter.MyFilter
  filter-chain-definitions: #默认为空，一般如下配置
    /test-my-filter: my-filter
    /logout: logout
    /favicon.ico: anon
    /assets/**: anon
    /**: authc
  filter-chain-sql: SELECT r.url, r.permission
    FROM sys_resource r
    WHERE r.permission != '' AND r.url != ''
  session-dao-class: com.batsoft.core.session.MySessionDAO
  realm-class: com.batsoft.service.module.system.auth.AccountAuthorizationRealm
  session: # TODO：BY LvQS:20190620 配置完成
    global-session-timeout: 18000
  cookie: # TODO：BY LvQS:20190620 配置完成
    sessionIdCookie:
      name:

# TODO：BY LvQS:20190620 配置完成
# 应用配置
batsoft:
  name:
  validCode:
  mobileCode:
  emailCode:
  desc:
  file:
    basepath:
  static-assets:
  lucene:
    server:
  tplPath:
  defaultCoin:

# TODO：BY LvQS:20190620 配置完成
http:
  maxTotal: 2
  defaultMaxPerRoute: 20
  connectTimeout: 5000
  connectionRequestTimeout: 5000
  socketTimeout: 5000
  staleConnectionCheckEnabled: true


